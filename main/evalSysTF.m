function [sysd] = evalSysTF(data)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Детальное описание функции:
%   evalSysTF - функция оценивает передаточную функцию системы с помощью
%   метода tfest в который подается порядок модели, а также структура дан-
%   ных которая содержит входной и выходной сигнал, передаточную функцию.
%
% Входные аргументы:
% - data - структура данных содержащая входной и выходной сигнал системы и 
%   период дискретизации.
%
% Выходные аргументы:
% - sysd - оцененная передаточная функция дискретной модели с оптимальным
%   порядком для данной системы.
% - opt_order - оптимальный порядок передаточной функции.
%
% Примечание:
% - MSE - это среднеквадратичное отклонение между оригинальными данными и 
%   данными, полученными с помощью модели. Чем меньше значение этого пока-
%   зателя, тем более точная модель.
% - AIC - это информационный критерий Акаике. Он оценивает точность модели,
%   используя веса для балансировки между точностью и сложностью модели. 
%   Чем меньше значение этого показателя, тем более точная модель.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Код функции начинается здесь

    % Период дискретизации
    Ts = data.Ts;

    % Создание диапазона возможных порядков передаточной функции
    orders = 1:100;
    len_orders = length(orders);

    % Создание структуры и массива для хранения данных (см. описание ф.)
    struct_sysd = struct();
    data_mse_aic = zeros(len_orders, 2);

    % Расчет передаточных функций разных порядков
    for idx = 1:length(orders)

        % Из-за слишком большого порядка может возникнуть исключение
        try 

            sysd = tfest(data, orders(idx), 'Ts', Ts);

        catch

            data_mse_aic = data_mse_aic(1:idx - 1, :);
            break

        end

        struct_sysd.(sprintf('sysd_%d', orders(idx))) = sysd;
        data_mse_aic(idx, 1) = sysd.Report.Fit.MSE;
        data_mse_aic(idx, 2) = sysd.Report.Fit.AIC;
        fprintf('%d ', orders(idx))

    end

    % выбор оптимального порядка модели
    w1 = 0.5; % вес для MSE
    w2 = 0.5; % вес для AIC
    error = w1 * data_mse_aic(:, 1) + w2 * data_mse_aic(:, 2);

    [~, idx] = min(error);
    opt_order = orders(idx);
    fprintf('\nЦикл завершен, оптимальный порядок: %d.\n', opt_order)
    sysd = struct_sysd.(['sysd_', num2str(opt_order)]);

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Код функции заканчивается здесь
end


